*tgpg.txt*          Yet another plugin for encrypting files with gpg
                    Author: Tom Link, micathom at gmail com

Features:

    - encrypt symmetrically
    - encrypt asymmetrically
    - clearsign buffer contents

I couldn't get any of the existing gpg plugins to work properly (windows 
Gvim & cygwin gpg) and do all the things I wanted it to do, so I wrote 
this one. The main purpose is to perform symmetric encryption (the 
default) but it's flexible enough to do also clearsign and asymmetric 
encryption.

You can set |g:tgpgMode| or |b:tgpgMode| to 'encrypt' for switching to 
asymmetric encryption as default. You can also control the use of 
symmetric and asymmetric encryption by setting set 
|g:tgpgPattern_symmetric| and |g:tgpgPattern_encrypt|.

This plugin passes the passphrase on the command line to the gpg 
programm. So, it could be possible that somebody makes the passphrase 
show up in some command log. Under some circumstances it could also be 
possible that some info (eg the recipients) is logged in your viminfo 
file. If you clearsign a message, the plain text will be written to 
disk. Ie, if you clearsign a gpg encrypted message, the text will 
temporarily be written to disk as plain text -- please keep in mind the 
vast range of possible consequences. If you don't like to pass 
passphrases on the command line, you'd have to change the command 
templates.

This plugin uses the (Buf|File)(Read|Write)Cmd autocommand events to 
write/read the file. I'm not sure how this works out with other plugins 
using these events.

As I don't like typing passphrases, this plugin caches all the 
passphrases entered in encoded form in a script local variable. This 
means that passphrases could be written to core dumps/swapfiles, from 
where somebody somehow could possibly do something ... Set g:tgpgCachePW 
to 1 (buffer-wise caching only) or 0 (no caching) to change this.

This plugin was tested with Windows GVim & cygwin gpg 1.4.5 (using bash 
as shell) as well as linux vim & gpg 1.4.5. It's possible (albeit  
unlikely) that the use of a pure Windows version of gpg or cmd.exe as 
shell doesn't work.  (Please report problems.)

If you get a message telling you about gpg command line options instead 
of the decrypted file, please check the value of |g:tgpgShellQuote|.

If writing fails, it's possible that you end up with a corrupted or 
empty file. That's why we make backups by default. Set |g:tgpgBackup| to 
0 to change this.


=======================================================================
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties or use vim 7.0, 
please make sure, you have the current version of vimball (vimscript 
#1502) installed.

Double-check the following variables for correct values:
    - |g:tgpg_gpg_cmd|
    - |g:tgpg_gpg_md5_sum|
    - |g:tgpg_gpg_md5_check|
    - |g:tgpgOptions|
    - |g:tgpgShellQuote|


========================================================================
Contents~

        g:tgpg_timeout ............ |g:tgpg_timeout|
        g:tgpg_gpg_cmd ............ |g:tgpg_gpg_cmd|
        g:tgpg_gpg_md5_check ...... |g:tgpg_gpg_md5_check|
        g:tgpg_gpg_md5_sum ........ |g:tgpg_gpg_md5_sum|
        g:tgpg_options ............ |g:tgpg_options|
        g:tgpg_registers .......... |g:tgpg_registers|
        g:tgpgCachePW ............. |g:tgpgCachePW|
        g:tgpgBackup .............. |g:tgpgBackup|
        g:tgpgMode ................ |g:tgpgMode|
        g:tgpgModes ............... |g:tgpgModes|
        g:tgpgPattern_symmetric ... |g:tgpgPattern_symmetric|
        g:tgpgWrite_symmetric ..... |g:tgpgWrite_symmetric|
        g:tgpgRead_symmetric ...... |g:tgpgRead_symmetric|
        g:tgpgPattern_encrypt ..... |g:tgpgPattern_encrypt|
        g:tgpgWrite_encrypt ....... |g:tgpgWrite_encrypt|
        g:tgpgRead_encrypt ........ |g:tgpgRead_encrypt|
        g:tgpgPattern_clearsign ... |g:tgpgPattern_clearsign|
        g:tgpgWrite_clearsign ..... |g:tgpgWrite_clearsign|
        g:tgpgOptions ............. |g:tgpgOptions|
        g:tgpgCmdRecipient ........ |g:tgpgCmdRecipient|
        g:tgpgSepRecipient ........ |g:tgpgSepRecipient|
        g:tgpgCmdPassphrase ....... |g:tgpgCmdPassphrase|
        g:tgpgShellQuote .......... |g:tgpgShellQuote|
        g:tgpgTempSuffix .......... |g:tgpgTempSuffix|
        g:tgpgInputsecret ......... |g:tgpgInputsecret|
        :TGpgResetCache ........... |:TGpgResetCache|


========================================================================
plugin/tGpg.vim~

                                                    *g:tgpg_timeout*
g:tgpg_timeout                 (default: 1800)
    Reset cached passwords after N seconds.
    1800 ... 30 Minutes

                                                    *g:tgpg_gpg_cmd*
g:tgpg_gpg_cmd                 (default: '/usr/bin/gpg')
    The gpg command. Should be a full filename.

                                                    *g:tgpg_gpg_md5_check*
g:tgpg_gpg_md5_check           (default: 'md5sum '. g:tgpg_gpg_cmd)
    The command to calculate the md5 checksum.

                                                    *g:tgpg_gpg_md5_sum*
g:tgpg_gpg_md5_sum             (default: '')
    The known md5 checksum of gpg binary.
    If empty, the binary's integrity won't be checked.

                                                    *g:tgpg_options*
g:tgpg_options                 (default: {'verbosefile': '', 'verbose': 0})
    Set these options during read/write operations.

                                                    *g:tgpg_registers*
g:tgpg_registers               (default: '"-/_*+')
    Reset these registers (eg the clipboard) after leaving/deleting a 
    gpg encoded buffer.

                                                    *g:tgpgCachePW*
g:tgpgCachePW                  (default: 2)
    2 ... cache passwords
    1 ... buffer-wise caching only???
    0 ... disable caching

                                                    *g:tgpgBackup*
g:tgpgBackup                   (default: 1)
    When writing, make backups (in case something goes wrong).

                                                    *g:tgpgMode*
g:tgpgMode                     (default: 'symmetric')
    The default run mode. Pre-defined values include:
    - symmetric (default)
    - encrypt
    - clearsign
    See also |g:tgpgModes|

                                                    *g:tgpgModes*
g:tgpgModes                    (default: ['symmetric', 'encrypt', 'clearsign'])
    A list of known modes.


-----------------------------------------------------------------------
Mode definitions~

The template values are returned by functions 
s:TGpgUserInput_{FIELD}(params).

                                                    *g:tgpgPattern_symmetric*
g:tgpgPattern_symmetric        (default: g:tgpgMode == 'symmetric' ? '*.\(gpg\|asc\|pgp\)' : '')

                                                    *g:tgpgWrite_symmetric*
g:tgpgWrite_symmetric          (default: '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -o %{FILE} -c')

                                                    *g:tgpgRead_symmetric*
g:tgpgRead_symmetric           (default: '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -d %{FILE}')

                                                    *g:tgpgPattern_encrypt*
g:tgpgPattern_encrypt          (default: g:tgpgMode == 'encrypt' ? '*.\(gpg\|asc\|pgp\)' : '')

                                                    *g:tgpgWrite_encrypt*
g:tgpgWrite_encrypt            (default: '!%{GPG} %{G_OPTIONS} %{RECIPIENTS} %{B_OPTIONS} -e -o %{FILE}')

                                                    *g:tgpgRead_encrypt*
g:tgpgRead_encrypt             (default: '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -d %{FILE}')

                                                    *g:tgpgPattern_clearsign*
g:tgpgPattern_clearsign        (default: '')

                                                    *g:tgpgWrite_clearsign*
g:tgpgWrite_clearsign          (default: '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -o %{FILE} --clearsign')


-----------------------------------------------------------------------
gpg options~

                                                    *g:tgpgOptions*
g:tgpgOptions                  (default: '-q --no-secmem-warning')
    G_OPTIONS: The default options.

                                                    *g:tgpgCmdRecipient*
g:tgpgCmdRecipient             (default: '-r "%s"')
    RECIPIENTS: How to pass recipients.

                                                    *g:tgpgSepRecipient*
g:tgpgSepRecipient             (default: ';|/&')
    Separators the user may use when naming multiple recipients.

                                                    *g:tgpgCmdPassphrase*
g:tgpgCmdPassphrase            (default: '--passphrase "%s"')
    PASSPHRASE: How to pass the passphrase.

                                                    *g:tgpgShellQuote*
g:tgpgShellQuote               (default: '&'.&shellxquote)
    More characters that should be quoted.

                                                    *g:tgpgTempSuffix*
g:tgpgTempSuffix               (default: '.~tGpg~')
    The suffix for backups and temporary files.

                                                    *g:tgpgInputsecret*
g:tgpgInputsecret              (default: 'inputsecret')
    A function to input "secrets".


-----------------------------------------------------------------------
Commands and functions~

                                                    *:TGpgResetCache*
:TGpgResetCache



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
